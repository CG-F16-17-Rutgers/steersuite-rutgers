PART A

./steersim -testcase ../../testcases/polygons1.xml -ai collisionAI

Creating spatialdatabase: gridDatabase
Creating planning domain: gridDomain
Created a grid database planning domain *************
checking: ./collisionAI.dll for module
loaded module collisionAI
loaded module testCasePlayer
Initializing...
Preprocessing...
 NO collision detected between polygon No.0 and No.1
 NO collision detected between polygon No.0 and No.2
 NO collision detected between polygon No.0 and No.3
 NO collision detected between polygon No.0 and No.4
 Collision detected between polygon No.0 and No.5 with a penetration depth of 1 and penetration vector of (-1,0,-0)
 NO collision detected between polygon No.1 and No.2
 NO collision detected between polygon No.1 and No.3
 NO collision detected between polygon No.1 and No.4
 NO collision detected between polygon No.1 and No.5
 Collision detected between polygon No.2 and No.3 with a penetration depth of 2 and penetration vector of (-0,0,-1)
 NO collision detected between polygon No.2 and No.4
 Collision detected between polygon No.2 and No.5 with a penetration depth of 0.707107 and penetration vector of (0.707107,0,0.707107)
 NO collision detected between polygon No.3 and No.4
 Collision detected between polygon No.3 and No.5 with a penetration depth of 1.34164 and penetration vector of (0.894427,0,0.447214)
 NO collision detected between polygon No.4 and No.5
Simulation is running...
Postprocessing...
Simulated 451 frames.
Cleaning up...
Done.
Removing module: testCasePlayer
Removing module: collisionAI



PART B
$ ./steersim -testcase ../../testcases/polygons2.xml -ai collisionAI

Creating spatialdatabase: gridDatabase
Creating planning domain: gridDomain
Created a grid database planning domain *************
checking: ./collisionAI.dll for module
loaded module collisionAI
loaded module testCasePlayer
Initializing...
Preprocessing...

(WINDOWS SAYS THE PROGRAM HAS CRASHED AT THIS POINT AND THE TERMINAL OUTPUT DOES NOT HAVE ANYTHING ELSE)


PART C
Polygons2.xml crashes because the one polygon intersects with itself. Once polygons2.xml was changed so there was no polygon intersecting with itself then polygons2.xml no longer crashed.

The fixed version is called polygons_2.xml and had the polygons position changed so they are colliding and one is still concave in order to show our code works.

Its' terminal output is

$ ./steersim -testcase ../../testcases/polygons_2.xml -ai collisionAI

Creating spatialdatabase: gridDatabase
Creating planning domain: gridDomain
Created a grid database planning domain *************
checking: ./collisionAI.dll for module
loaded module collisionAI
loaded module testCasePlayer
Initializing...
Preprocessing...
Collision detected between polygon No.0 and No.1 with a penetration depth of 1 and penetration vector of (-0.8,0,0.6)
Simulation is running...
Postprocessing...
Simulated 225 frames.
Cleaning up...
Done.
Removing module: testCasePlayer
Removing module: collisionAI

PART D

With the standard GJK algorithm it detects a collision despite the two polygons clearly not colliding anywhere. 

This can be seen from its terminal output which is below

$ ./steersim -testcase ../../testcases/polygons3.xml -ai collisionAI

Creating spatialdatabase: gridDatabase
Creating planning domain: gridDomain
Created a grid database planning domain *************
checking: ./collisionAI.dll for module
loaded module collisionAI
loaded module testCasePlayer
Initializing...
Preprocessing...
Collision detected between polygon No.0 and No.1 with a penetration depth of 7.48022e+28 and penetration vector of (0,0,0)
Simulation is running...
Postprocessing...
Simulated 232 frames.
Cleaning up...
Done.
Removing module: testCasePlayer
Removing module: collisionAI

Polygon decomposition was done by the following steps
1. Go through each point and get the angle of the point
2. If the angle is larger than pi it means that point is a concave part of the polygon
3. For each such point, we will get the two previous points and we construct a triangle with those three points and that triangle is a convex polygon.
4. Those 3 steps are repeated until every point has been checked and used in a triangle if necessary. 

After changing the GJK algorithm to work with convex polygon decomposition it runs properly and detects no collisions as can be seen in the following terminal output

$ ./steersim -testcase ../../testcases/polygons3.xml -ai collisionAI

Creating spatialdatabase: gridDatabase
Creating planning domain: gridDomain
Created a grid database planning domain *************
checking: ./collisionAI.dll for module
loaded module collisionAI
loaded module testCasePlayer
Initializing...
Preprocessing...
 NO collision detected between polygon No.0 and No.1
Simulation is running...
Postprocessing...
Simulated 232 frames.
Cleaning up...
Done.
Removing module: testCasePlayer
Removing module: collisionAI

